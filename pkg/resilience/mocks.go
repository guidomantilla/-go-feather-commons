// Code generated by MockGen. DO NOT EDIT.
// Source: ../pkg/resilience/types.go

// Package resilience is a generated GoMock package.
package resilience

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFailSaver is a mock of FailSaver interface.
type MockFailSaver struct {
	ctrl     *gomock.Controller
	recorder *MockFailSaverMockRecorder
}

// MockFailSaverMockRecorder is the mock recorder for MockFailSaver.
type MockFailSaverMockRecorder struct {
	mock *MockFailSaver
}

// NewMockFailSaver creates a new mock instance.
func NewMockFailSaver(ctrl *gomock.Controller) *MockFailSaver {
	mock := &MockFailSaver{ctrl: ctrl}
	mock.recorder = &MockFailSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFailSaver) EXPECT() *MockFailSaverMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockFailSaver) Run(work func() error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", work)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockFailSaverMockRecorder) Run(work interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockFailSaver)(nil).Run), work)
}
